schema {
  query: RootQueryType
}

"""ISO 8601 date"""
scalar Date

"""RFC3339 time with timezone"""
scalar Datetime

"""A singular flow state with local time"""
type Flow {
  duration: Int
  languages: FlowLanguages
  startTimeLocal: NaiveDatetime
  xp: Int
}

"""A date and its amount of minutes spent in flow state"""
type FlowDate {
  date: Date
  mins: Int
}

"""Map of languages and their XP in flow"""
scalar FlowLanguages

"""Map of the top notable flow states and other metadata"""
type FlowMetaInfo {
  averageDuration: Float
  averageXp: Float
  longest: Flow
  mostProlific: Flow
  strongest: Flow
}

"""
Map where key is language name and value contains various stats about flows in given language
"""
scalar FlowTopLanguages

"""ISO 8601 naive datetime"""
scalar NaiveDatetime

"""User profile public data"""
type Profile {
  """User's dates when they have been active and their XP"""
  dates(since: Date): [ProfileDate]

  """
  User's dates since given date with their summed XP per language per day
  """
  dayLanguageXps(since: Date!): [ProfileDaylanguage]

  """User's XP by day of week"""
  dayOfWeekXps(since: Date): [ProfileDowXp]

  """User's XP by day of year"""
  dayOfYearXps: ProfileDayOfYearXp

  """User's minutes spent in flow state by day"""
  flowMinsByDay(since: Date): [FlowDate]

  """User's XP by hour of day (in 24 hour format)"""
  hourOfDayXps: ProfileHourOfDayXp

  """User's languages and their XP"""
  languages(noCache: Boolean, since: Datetime): [ProfileLanguage]

  """User's machines and their XP"""
  machines(since: Datetime): [ProfileMachine]

  """Timestamp when user registered into service"""
  registered: Datetime

  """User's top languages in flow states"""
  topFlowLanguages: FlowTopLanguages

  """User's top notable flow states"""
  topFlows: FlowMetaInfo

  """Total amount of XP of user"""
  totalXp: Int

  """User's languages before aliasing and their XP"""
  unaliasedLanguages: [ProfileLanguage]
}

"""Date when user was active and its total XP for a profile"""
type ProfileDate {
  date: String
  xp: Int
}

"""Date when profile has an amount of XP of the language"""
type ProfileDaylanguage {
  date: Date
  language: String
  xp: Int
}

"""
Map where key is number of day of year (including leap day, like in the year 2000) and value is amount of XP
"""
scalar ProfileDayOfYearXp

"""Day of week and its combined XP"""
type ProfileDowXp {
  day: Int
  xp: Int
}

"""
Map where key is hour of day (in 24 hour format) and value is amount of XP
"""
scalar ProfileHourOfDayXp

"""Language and its total XP for a profile"""
type ProfileLanguage {
  name: String
  xp: Int
}

"""Machine and its total XP for a profile"""
type ProfileMachine {
  name: String
  xp: Int
}

type RootQueryType {
  """Get profile by username"""
  profile(
    """Username of profile"""
    username: String
  ): Profile
}

